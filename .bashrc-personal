#   | |__   __ _ ___| |__  _ __ ___ 
#   | '_ \ / _` / __| '_ \| '__/ __|
#  _| |_) | (_| \__ \ | | | | | (__ 
# (_)_.__/ \__,_|___/_| |_|_|  \___|
# 
# -----------------------------------------------------
# ~/.bashrc
# -----------------------------------------------------

# -----------------------------------------------------
# ALIASES
# -----------------------------------------------------

alias sf='sudo setfont ter-128b'
alias c='clear'
alias shutdown='systemctl poweroff'
alias v='nvim'
alias shot='scrot -d 3 -c -z -u'
alias shotsel='scrot -s'
alias wifi='nmtui'
alias wdownload='sudo mount --bind ~/Downloads ~/.local/share/waydroid/data/media/0/Download'
alias dot="cd ~/dotfiles"
alias yt='exec ~/dotfiles/myMenu/YT'

# Window Managers

alias Qtile='startx'
alias QtileWayland='qtile start -b wayland'
alias xfce='exec startxfce4'
alias chadwm='startx ~/dotfiles/arco-chadwm/scripts/run.sh'
alias xdwm='startx ~/.suckless/dwm/scripts/run.sh'

# -----------------------------------------------------
# GIT
# -----------------------------------------------------

alias gs="git status"
alias ga="git add"
alias gc="git commit -m"
alias gp="git push"
alias gpl="git pull"
alias gst="git stash"
alias gsp="git stash; git pull"
alias gcheck="git checkout"


#list
#alias ls='ls --color=auto'

# SCRIPTS

# alias w='~/dotfiles/scripts/updatewal.sh'
# alias wallp='~/dotfiles/scripts/updatewal.sh'
alias gr='python ~/dotfiles/scripts/growthrate.py'
alias ChatGPT='python ~/mychatgpt/mychatgpt.py'
alias chat='python ~/mychatgpt/mychatgpt.py'
alias ascii='~/dotfiles/scripts/figlet.sh'

# VIRTUAL MACHINE

alias vm='~/private/launchvm.sh'
alias lg='~/dotfiles/scripts/looking-glass.sh'
alias vmstart='virsh --connect qemu:///system start win11'
alias vmstop='virsh --connect qemu:///system destroy win11'
alias vmstatus='virsh --connect qemu:///system list --all'

# EDIT CONFIG FILES

alias confq='nvim ~/dotfiles/qtile/config.py'
alias confb='nvim ~/dotfiles/.bashrc-personal'
alias confp='nvim ~/dotfiles/.setup/install-packages.sh'

# Cat Config Files
alias catb='cat ~/dotfiles/.bashrc-personal'

# EDIT NOTES
alias notes='vim ~/notes.txt'

# SYSTEM

alias update-grub='sudo grub-mkconfig -o /boot/grub/grub.cfg'
alias setkb='setxkbmap gb;echo "Keyboard set back to gb."'

#reload qtile
alias ql="qtile cmd-obj -o cmd -f reload_config"

#pacman unlock
alias unlock="sudo rm /var/lib/pacman/db.lck"
alias rmpacmanlock="sudo rm /var/lib/pacman/db.lck"


# Expand the history size
export HISTFILESIZE=10000
export HISTSIZE=500
export PATH="/usr/lib/ccache/bin/:$PATH"

#try to unmute audio
unmute-all()
{
	amixer sset Master unmute
	amixer sset Master 100%
}


# Copy file with a progress bar
cpp()
{
	set -e
	strace -q -ewrite cp -- "${1}" "${2}" 2>&1 \
	| awk '{
	count += $NF
	if (count % 10 == 0) {
		percent = count / total_size * 100
		printf "%3d%% [", percent
		for (i=0;i<=percent;i++)
			printf "="
			printf ">"
			for (i=percent;i<100;i++)
				printf " "
				printf "]\r"
			}
		}
	END { print "" }' total_size="$(stat -c '%s' "${1}")" count=0
}

# Show current network information
netinfo ()
{
	echo "--------------- Network Information ---------------"
	/sbin/ifconfig | awk /'inet addr/ {print $2}'
	echo ""
	/sbin/ifconfig | awk /'Bcast/ {print $3}'
	echo ""
	/sbin/ifconfig | awk /'inet addr/ {print $4}'



	/sbin/ifconfig | awk /'HWaddr/ {print $4,$5}'
	echo "---------------------------------------------------"
}

# IP address lookup
alias whatismyip="whatsmyip"
function whatsmyip ()
{
	# Dumps a list of all IP addresses for every device
	# /sbin/ifconfig |grep -B1 "inet addr" |awk '{ if ( $1 == "inet" ) { print $2 } else if ( $2 == "Link" ) { printf "%s:" ,$1 } }' |awk -F: '{ print $1 ": " $3 }';
	
	### Old commands
	# Internal IP Lookup
	#echo -n "Internal IP: " ; /sbin/ifconfig eth0 | grep "inet addr" | awk -F: '{print $2}' | awk '{print $1}'
#
#	# External IP Lookup
	#echo -n "External IP: " ; wget http://smart-ip.net/myip -O - -q
	
	# Internal IP Lookup.
	if [ -e /sbin/ip ];
	then
		echo -n "Internal IP: " ; /sbin/ip addr show wlan0 | grep "inet " | awk -F: '{print $1}' | awk '{print $2}'
	else
		echo -n "Internal IP: " ; /sbin/ifconfig wlan0 | grep "inet " | awk -F: '{print $1} |' | awk '{print $2}'
	fi

	# External IP Lookup 
	echo -n "External IP: " ; curl -s ifconfig.me
}

gcom() {
	git add .
	git commit -m "$1"
	}
lazyg() {
	git add .
	git commit -m "$1"
	git push
}

#Autojump


# -----------------------------------------------------
# START STARSHIP
# -----------------------------------------------------
#eval "$(starship init bash)"
eval "$(zoxide init bash)"
# -----------------------------------------------------
# PYWAL
# -----------------------------------------------------
#cat ~/.cache/wal/sequences

# -----------------------------------------------------
# fastfetch
# -----------------------------------------------------
echo ""
fastfetch

bind '"\C-f":"zi\n"'

# Enable bash programmable completion features in interactive shells
if [ -f /usr/share/bash-completion/bash_completion ]; then
	. /usr/share/bash-completion/bash_completion
elif [ -f /etc/bash_completion ]; then
	. /etc/bash_completion
fi

#echo ""
#if [[ $(tty) == *"pts"* ]]; then
#    pfetch
#else
#    if [ -f /bin/qtile ]; then
#        echo "Start Qtile X11 with command Qtile"
#        echo "Start Qtile Wayland with command QtileWayland"
#    fi
#    if [ -f /bin/hyprctl ]; then
#        echo "Start Hyprland with command Hyprland"
#    fi
#fi

#flutter
export ANDROID_SDK_ROOT='/opt/android-sdk'
export PATH=$PATH:$ANDROID_SDK_ROOT/platform-tools/
export PATH=$PATH:$ANDROID_SDK_ROOT/tools/bin/
export PATH=$PATH:$ANDROID_ROOT/emulator
export PATH=$PATH:$ANDROID_SDK_ROOT/tools/

# Git pull all repositories
pall() {
    # List of repository directories
    repositories=(
        "$HOME/dotfiles/"
        "$HOME/Documents/myWebSites/tc-website/"
        "$HOME/Documents/myWebSites/tc-scanned/"

    )

    # Loop through each repository and perform a git pull
    for repo in "${repositories[@]}"; do
        echo "Pulling changes in $repo..."
        cd "$repo" || continue
        git pull
    done
}

# Docker aliases
# dps: Lists all Docker containers (including stopped ones).
# dimages: Lists all Docker images.
# dlogs: Displays logs of a Docker container.
# dexec: Executes a command in a running Docker container.
# drm: Removes a Docker container.
# drmi: Removes a Docker image.
# dstopall: Stops all Docker containers.
# drmall: Removes all Docker containers.
# dprune: Removes all unused Docker resources (containers, networks, images, and volumes).
alias dps='docker ps -a'
alias dimages='docker images'
alias dlogs='docker logs'
alias dexec='docker exec -it'
alias drm='docker rm'
alias drmi='docker rmi'
alias dstopall='docker stop $(docker ps -a -q)'
alias drmall='docker rm $(docker ps -a -q)'
alias dprune='docker system prune -a'
alias dcup='docker-compose up -d'
alias ds='docker start'

alias penv='source ~/myenv/bin/activate'
alias aider='aider --model ollama/deepseek-coder-v2'


function git_reset_hard_main() {
    git fetch origin
    git reset --hard origin/main
}

